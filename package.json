{
  "name": "manifesto-enforcer",
  "displayName": "Manifesto Enforcer",
  "description": "🐷 [ALPHA v0.0.1] Meet Piggie! Your compliance-enforcing AI coding assistant. Uses your manifesto to enforce coding compliance. ⚠️ Super early alpha - not user tested!",
  "version": "0.0.61-alpha",
  "publisher": "manifesto-dev",
  "repository": {
    "type": "git",
    "url": "https://github.com/manifesto-dev/manifesto-code-assistant-pro.git"
  },
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "AI",
    "Other",
    "Testing"
  ],
  "keywords": [
    "ai",
    "manifesto",
    "coding-assistant",
    "multi-agent",
    "tdd",
    "claude",
    "augment",
    "amazon-q"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "manifestoEnforcer.toggleManifestoMode",
        "title": "🛡️ Toggle Manifesto Mode",
        "icon": "$(shield)"
      },
      {
        "command": "manifestoEnforcer.switchAgent",
        "title": "🐷 Switch Piggie's Brain (AI Agent)",
        "icon": "$(shield)"
      },
      {
        "command": "manifestoEnforcer.quickChat",
        "title": "⚡ Quick Chat with Piggie",
        "icon": "$(comment)"
      },
      {
        "command": "manifestoEnforcer.writeCode",
        "title": "📝 Piggie: Write Code",
        "icon": "$(edit)"
      },
      {
        "command": "manifestoEnforcer.openChat",
        "title": "💬 Chat with Piggie",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "manifestoEnforcer.validateCompliance",
        "title": "✅ Piggie: Validate Manifesto Compliance",
        "icon": "$(check)"
      },
      {
        "command": "manifestoEnforcer.createManifesto",
        "title": "📝 Create New Manifesto",
        "icon": "$(new-file)"
      },
      {
        "command": "manifestoEnforcer.openSettings",
        "title": "⚙️ Piggie Settings",
        "icon": "$(settings-gear)"
      },
      {
        "command": "manifestoEnforcer.testConnection",
        "title": "🔧 Test Piggie Connection",
        "icon": "$(debug)"
      },
      {
        "command": "piggie.discoverAPIs",
        "title": "🔍 Piggie: Discover AI Agent APIs",
        "icon": "$(search)"
      },
      {
        "command": "manifestoEnforcer.reviewSelectedCode",
        "title": "🐷 Piggie: Review Selected Code",
        "icon": "$(shield)"
      },
      {
        "command": "manifestoEnforcer.refactorSelectedCode",
        "title": "🐷 Piggie: Refactor Selected Code",
        "icon": "$(edit)"
      },
      {
        "command": "manifestoEnforcer.explainSelectedCode",
        "title": "🐷 Piggie: Explain Selected Code",
        "icon": "$(question)"
      },
      {
        "command": "manifestoEnforcer.sendToAmazonQ",
        "title": "🐷 Send to Amazon Q (Manifesto Enhanced)",
        "icon": "$(cloud)"
      },
      {
        "command": "manifestoEnforcer.refreshManifesto",
        "title": "Refresh Manifesto",
        "icon": "$(refresh)"
      },
      {
        "command": "manifestoEnforcer.refreshGlossary",
        "title": "Refresh Glossary",
        "icon": "$(refresh)"
      },
      {
        "command": "manifestoEnforcer.addGlossaryTermFromTree",
        "title": "Add Term",
        "icon": "$(add)"
      },
      {
        "command": "manifestoEnforcer.removeGlossaryTerm",
        "title": "Remove Term",
        "icon": "$(trash)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "manifesto-enforcer",
          "title": "Manifesto Enforcer",
          "icon": "$(shield)"
        }
      ]
    },
    "views": {
      "manifesto-enforcer": [
        {
          "id": "manifestoView",
          "name": "📋 Manifesto",
          "when": "workspaceFolderCount > 0"
        },
        {
          "id": "glossaryView",
          "name": "📖 Glossary",
          "when": "workspaceFolderCount > 0"
        },
        {
          "id": "piggieChatPanel",
          "name": "💬 Chat with Piggie",
          "type": "webview",
          "when": "workspaceFolderCount > 0"
        },
        {
          "id": "piggieActions",
          "name": "🐷 Piggie Actions",
          "when": "workspaceFolderCount > 0"
        },
        {
          "id": "manifestoRules",
          "name": "🛡️ Manifesto Rules",
          "when": "workspaceFolderCount > 0"
        },
        {
          "id": "piggieSecurityReview",
          "name": "🔒 Security Review",
          "when": "workspaceFolderCount > 0"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "manifestoEnforcer.refreshManifesto",
          "when": "view == manifestoView",
          "group": "navigation"
        },
        {
          "command": "manifestoEnforcer.refreshGlossary",
          "when": "view == glossaryView",
          "group": "navigation"
        },
        {
          "command": "manifestoEnforcer.addGlossaryTermFromTree",
          "when": "view == glossaryView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "manifestoEnforcer.removeGlossaryTerm",
          "when": "view == glossaryView && viewItem == term",
          "group": "inline"
        }
      ],
      "editor/context": [
        {
          "command": "manifestoEnforcer.reviewSelectedCode",
          "when": "editorHasSelection",
          "group": "piggie@1"
        },
        {
          "command": "manifestoEnforcer.refactorSelectedCode",
          "when": "editorHasSelection",
          "group": "piggie@2"
        },
        {
          "command": "manifestoEnforcer.explainSelectedCode",
          "when": "editorHasSelection",
          "group": "piggie@3"
        },
        {
          "command": "manifestoEnforcer.sendToAmazonQ",
          "when": "editorHasSelection",
          "group": "piggie@4"
        }
      ]
    },
    "configuration": {
      "title": "Manifesto Enforcer",
      "properties": {
        "manifestoEnforcer.manifestoPath": {
          "type": "string",
          "default": "manifesto.md",
          "description": "Path to the development manifesto file",
          "scope": "resource"
        },
        "manifestoEnforcer.defaultAgent": {
          "type": "string",
          "default": "auggie",
          "enum": [
            "auggie",
            "amazon-q",
            "cline",
            "copilot",
            "openai",
            "local"
          ],
          "description": "Default AI agent for Piggie to use"
        },
        "manifestoEnforcer.strictMode": {
          "type": "boolean",
          "default": true,
          "description": "Enable strict manifesto compliance checking"
        },
        "manifestoEnforcer.autoWriteCode": {
          "type": "boolean",
          "default": false,
          "description": "Let Piggie automatically write code to files (requires confirmation)"
        },
        "manifestoEnforcer.performanceMonitoring": {
          "type": "boolean",
          "default": true,
          "description": "Monitor Piggie's response times (manifesto requirement)"
        },
        "manifestoEnforcer.debugMode": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug mode with detailed logging"
        },
        "manifestoEnforcer.connectionTimeout": {
          "type": "number",
          "default": 5000,
          "description": "Timeout for agent connections (milliseconds)"
        },
        "manifestoEnforcer.defaultMode": {
          "type": "string",
          "default": "chat",
          "enum": [
            "chat",
            "agent"
          ],
          "description": "Default mode for Piggie: 'chat' for explanations only, 'agent' for performing actions"
        },
        "manifestoEnforcer.autoMode": {
          "type": "boolean",
          "default": false,
          "description": "Auto mode: automatically execute commands without confirmation (default: false for safety)"
        },
        "manifestoEnforcer.fontSize": {
          "type": "string",
          "default": "medium",
          "enum": [
            "small",
            "medium",
            "large"
          ],
          "description": "Font size for chat messages: small, medium, or large"
        },
        "manifestoEnforcer.showEmojis": {
          "type": "boolean",
          "default": true,
          "description": "Show emojis in chat responses (default: true)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "18.x",
    "@types/vscode": "^1.84.0",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.54.0",
    "jest": "^29.5.0",
    "ts-jest": "^29.1.0"
  },
  "dependencies": {
    "crypto": "^1.0.1",
    "typescript": "^5.3.2"
  }
}
